{"version":3,"file":"static/js/858.31b56d9b.chunk.js","mappings":"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","sources":["webpack://react_project/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react_project/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react_project/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/WithAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__MW4Z7\",\"wallpaper\":\"ProfileInfo_wallpaper__jdShW\",\"mainPhoto\":\"ProfileInfo_mainPhoto__oJMDt\",\"contact\":\"ProfileInfo_contact__DC-By\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <> {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}><b>Status</b>: {props.status || \"NoStatus\"}</span>\r\n            </div>\r\n        }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deActivateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, TextArea} from \"../../common/formsControls/formsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>save</button>\r\n        </div>\r\n        <div>\r\n            <b>Full Name</b>: {createField(\"Full Name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {createField(\"My professional skills\", \"lookingForAJobDescription\", [], TextArea)}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], TextArea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key=> {\r\n                return <div className={s.contact}>\r\n                    <b>{key}:</b>{createField(`${key}`, `contacts.${key}`, [], Input)}\r\n                </div>;\r\n        })}\r\n        </div>\r\n\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;\r\n","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user_png.webp\";\r\nimport {getFormValues, reduxForm} from \"redux-form\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile, ...props}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const mainPhotoSelectedOn = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData)\r\n        setEditMode(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <div>\r\n                    <img src={profile.photos.large || userPhoto} className={s.mainPhoto} alt=\"Profile\"/>\r\n                    {isOwner && (\r\n                        <div>\r\n                            <input\r\n                                type=\"file\"\r\n                                id=\"file-input\"\r\n                                className={s.fileInput}\r\n                                onChange={mainPhotoSelectedOn}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                { editMode\r\n                    ? <ProfileDataForm  initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    :\r\n                    <ProfileData profile={profile} goToEditMode={()=> {setEditMode(true)}} isOwner={isOwner}/>}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({isOwner, profile, goToEditMode})=> {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob && (\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        )}\r\n        <div>\r\n            <b>Full Name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts)\r\n            .map(key => {\r\n                return <Contact contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__m0ifO\",\"posts\":\"MyPosts_posts__oo0KL\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__sYnAs\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://sun1-86.userapi.com/s/v1/ig2/ZhLmYDSCxYUnlJPfApyGwHjUYUwSMfqqD8XWKDuA0z-YnFG3IMWpP4BeUgarc_EP9-dg5d9u0W812ffmiD3HEfZd.jpg?size=400x400&quality=95&crop=228,2,440,440&ava=1'\r\n                alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like </span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/formsControls/formsControls\";\r\n// import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profilePageReduser\";\r\n\r\nconst maxLenght10 = maxLenghtCreator(10)\r\n\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name='newPostText' component={TextArea} placeholder={'Enter your message'}\r\n                       validate={[required, maxLenght10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nlet SuperAddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        < div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <SuperAddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts\r\n","import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profilePageReduser\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n//\r\n//     let state = props.store.getState()\r\n//\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n//\r\n//     let onPostChange = (text) => {\r\n//         let action = updateNewPostTextActionCreator(text)\r\n//         props.store.dispatch(action)\r\n//     }\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange} addPost={addPost}\r\n//                  posts = {state.profilePage.posts}\r\n//                  newPostText = {state.profilePage.newPostText}\r\n//         />)\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React from \"react\";\r\nimport './Profile.css';\r\n\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <div>Loading...</div>;\r\n    }\r\nreturn (\r\n<main>\r\n    <ProfileInfo savePhoto={props.savePhoto}\r\n                 isOwner={props.isOwner}\r\n                 profile={props.profile}\r\n                 status={props.status}\r\n                 updateStatus={props.updateStatus}\r\n                 saveProfile={props.saveProfile}\r\n    />\r\n    <MyPostsContainer />\r\n\r\n</main>\r\n)\r\n}\r\n\r\nexport  default Profile\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profilePageReduser\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n\r\n\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    });\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer);\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let СonnectedAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return СonnectedAuthRedirectComponent\r\n}\r\n\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","_Fragment","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deActivateEditMode","updateStatus","reduxForm","form","_ref","handleSubmit","profile","onSubmit","createField","Input","type","TextArea","Object","keys","contacts","map","key","className","s","contact","concat","ProfileData","_ref2","isOwner","goToEditMode","onClick","lookingForAJob","lookingForAJobDescription","fullName","Contact","contactTitle","contactValue","_ref3","savePhoto","saveProfile","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","alt","id","fileInput","target","files","length","ProfileDataForm","initialValues","formData","ProfileStatusWithHooks","message","likesCount","maxLenght10","maxLenghtCreator","SuperAddNewPostForm","Field","name","component","placeholder","validate","required","React","postsElements","posts","p","Post","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","refreshProfile","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","Profile","compose","auth","isAuth","withRouter","WithAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","Redirect","to"],"sourceRoot":""}