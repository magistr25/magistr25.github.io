{"version":3,"file":"static/js/679.3888758a.chunk.js","mappings":"iKACA,SAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,2B,uBCI5I,MAUA,EAVoBA,IAEZC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAS,IAAMD,EAAEE,OAAOC,UACtCL,EAAAA,EAAAA,KAACM,EAAAA,EAAO,CAACC,GAAI,YAAcR,EAAMS,GAAGH,SAC/BN,EAAMU,SCAvB,EALiBV,IAETC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEQ,QAAQL,SAAEN,EAAMW,U,sDCF1C,MAgBA,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,2BAAhC,EAhBwBb,IACpB,IAAIc,GAAaC,EAAAA,EAAAA,GAAiB,IAClC,OACIC,EAAAA,EAAAA,MAAA,QAAMC,SAAUjB,EAAMkB,aAAaZ,SAAA,EAC/BL,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUX,KAAK,iBAC7BY,YAAY,kBACZC,SAAU,CAACC,EAAAA,EAAUV,QAE7Bb,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,aAET,ICyBf,EAjCiBN,IACb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAIC,IAAK7B,EAAAA,EAAAA,KAAC8B,EAAU,CAACrB,KAAMoB,EAAEpB,KAAiBD,GAAIqB,EAAErB,IAAZqB,EAAErB,MAC1EuB,EAAmBP,EAAMQ,SAASJ,KAAIK,IAAKjC,EAAAA,EAAAA,KAACkC,EAAO,CAACxB,QAASuB,EAAEvB,QAAoBF,GAAIyB,EAAEzB,IAAZyB,EAAEzB,MAQnF,OAAKT,EAAMoC,QAIPpB,EAAAA,EAAAA,MAAA,OAAKd,UAAWC,EAAEyB,QAAQtB,SAAA,EAEtBL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEkC,aAAa/B,SAC1BqB,KAIL1B,EAAAA,EAAAA,KAAA,OAAMC,UAAWC,EAAE8B,SAAS3B,UACxBL,EAAAA,EAAAA,KAAA,OAAAK,SAAM0B,OAEV/B,EAAAA,EAAAA,KAACqC,EAAmB,CAACrB,SAnBRsB,IAEjBvC,EAAMwC,YAAYD,EAAOE,eAAe,QAGlBxC,EAAAA,EAAAA,KAACyC,EAAAA,EAAQ,CAAClC,GAAI,UAgB9B,E,wBCOd,SAAemC,E,OAAAA,KACXC,EAAAA,EAAAA,KAjBmBnB,IACZ,CACHC,YAAaD,EAAMC,gBAMDmB,IACf,CACJL,YAAcC,IACTI,GAASC,EAAAA,EAAAA,IAAyBL,GAAgB,MAO1DM,EAAAA,EAFJ,CAGEC,E,6EC1CF,IAAIC,EAA8BxB,IAAK,CACnCW,OAAQX,EAAMyB,KAAKd,SAGhB,MAAMW,EAAoBI,IAC7B,MAAMC,UAA0BC,EAAAA,UAC5BC,MAAAA,GACI,OAAKC,KAAKvD,MAAMoC,QACTnC,EAAAA,EAAAA,KAACkD,EAAS,IAAKI,KAAKvD,SADIC,EAAAA,EAAAA,KAACyC,EAAAA,EAAQ,CAAClC,GAAI,UAEjD,EAKJ,OAFmCoC,EAAAA,EAAAA,IAAQK,EAARL,CAAoCQ,EAElC,C","sources":["webpack://react_project/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__hz+DW\",\"dialogsItems\":\"Dialogs_dialogsItems__MgQPf\",\"active\":\"Dialogs_active__9zRhx\",\"messages\":\"Dialogs_messages__0KmtU\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default DialogItem","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\nexport default Message","import {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../common/formsControls/formsControls\";\r\nimport {maxLenghtCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst AddMessageForm = (props) => {\r\n    let maxLenght50= maxLenghtCreator(50);\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name=\"newMessageBody\"\r\n                    placeholder=\"Write a message\"\r\n                    validate={[required, maxLenght50]} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm)\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageFormRedux from \"./Message/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} id={m.id}/>)\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        //alert(values.newMessageBody);\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>;\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n\r\n            < div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","import {sendMessageActionCreator} from \"../../redux/dialogsPageReduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n//\r\n//     let state = props.store.getState().dialogsPage\r\n//\r\n//     let onSendMessageClick = () => {\r\n//         props.store.dispatch(sendMessageActionCreator());\r\n//\r\n//     }\r\n//\r\n//     let onNewMessageChange = (body) => {\r\n//         props.store.dispatch(updateNewMessageBodyActionCreator(body));\r\n//\r\n//     }\r\n//\r\n//     return (\r\n//         <Dialogs updateNewMessageBody={onNewMessageChange} sendMessage={onSendMessageClick}\r\n//                  dialogsPage={props.dialogsPage}/>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n\r\n    }\r\n\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let СonnectedAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return СonnectedAuthRedirectComponent\r\n}\r\n\r\n"],"names":["props","_jsx","className","s","dialog","active","children","NavLink","to","id","name","message","reduxForm","form","maxLenght50","maxLenghtCreator","_jsxs","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","isAuth","dialogsItems","AddMessageFormRedux","values","sendMessage","newMessageBody","Redirect","compose","connect","dispatch","sendMessageActionCreator","WithAuthRedirect","Dialogs","mapStateToPropsForRedirect","auth","Component","RedirectComponent","React","render","this"],"sourceRoot":""}